{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","PropType","PropTypes","func","isRequired","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","color","height","width","image","GiftExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"oNAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAGI,aAFA,CAEA,QAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,aAyBhCZ,EAAYe,SAAW,CACnBd,cAAee,IAAUC,KAAKC,Y,oDCjCrBC,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEsCC,UAAWH,GAFjD,+DAICI,MAAOF,GAJR,cAIZG,EAJY,gBAMKA,EAAKC,OANV,uBAMVC,EANU,EAMVA,KAEFC,EAAOD,EAAKE,KAAI,SAAEC,GAAU,IAAD,EAC7B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZxB,kBAiBXM,GAjBW,4CAAH,sDCDNO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAItB,ECLwB,SAAEA,GAE1B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAACC,GAEJC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAGb,CAAEpB,IAEGqB,EDlB2BM,CAAc3B,GAAnCa,EAAb,EAAQN,KAAca,EAAtB,EAAsBA,QAItB,OACI,mCAGQA,EAEI,qBAAKJ,UAAU,qBAAf,SACI,cAAC,IAAD,CAAczB,KAAM,kBAAmBqC,MAAO,UAAWC,OAAQ,GAAIC,MAAO,OAIhF,qCACI,6BAAM9B,IAIN,qBAAKgB,UAAU,YAAf,SAIYH,EAAOJ,KAAK,SAAEsB,GACV,OAAO,cAAC,EAAD,eAEUA,GADAA,EAAMpB,eE7BzDqB,EAAgB,WAIlB,MAAoClD,mBAAU,CAAC,oBAA/C,mBAAOmD,EAAP,KAAmBpD,EAAnB,KAOA,OACI,qCACI,iDACA,uBAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAEQoD,EAAWxB,KAAK,SAAET,EAAUkC,GACxB,OAAO,cAAC,EAAD,CAEElC,SAAUA,GADLA,Y,MCvBtCmC,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.ffdbcdd5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setcategories( cats => [inputValue,...cats] );\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        //En caso de colocar una clase dejar el div sino quitarlo\r\n       \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.PropType = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGif = async(category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${  encodeURI( category )  }&api_key=KbzG6hIbDArfICwIlb9bMOsqxE6JySIN&limit=10`;\r\n    \r\n    const resp = await fetch( url );\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(( img ) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    //console.log(data);\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactLoading from 'react-loading';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n\r\n    const { data:images , loading } = useFetchGifs( category );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n                loading \r\n                ?( \r\n                    <div className=\"circular-indicator\" >\r\n                        <ReactLoading type={'spinningBubbles'} color={'#61dafb'} height={50} width={50} /> \r\n                    </div>\r\n                )\r\n                :(\r\n                    <>\r\n                        <h3>{ category }</h3>  \r\n\r\n                \r\n\r\n                        <div className=\"card-grid\">\r\n                        \r\n                \r\n                                {\r\n                                    images.map( ( image ) => {\r\n                                        return <GifGridItem \r\n                                                    key={image.id}\r\n                                                    { ...image }\r\n                                                />\r\n                                    })\r\n                                }\r\n                \r\n                        \r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGif( category )\r\n            .then( (imgs) =>  {\r\n\r\n                setTimeout(() => {\r\n                    \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    });\r\n\r\n                }, 3000);\r\n                \r\n            });\r\n    },[ category ]);\r\n\r\n    return state;\r\n\r\n\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setcategories] = useState( ['Super Campeones'] );\r\n\r\n    /* const handleAdd = () => {\r\n        //setcategories([...categories,'HunterXHunter']);\r\n        setcategories( cats => [...cats, 'HunterXHunter']);\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>Gift Expert App</h2>\r\n            <hr/>\r\n            \r\n            <AddCategory setcategories={ setcategories } />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( ( category, index ) =>  {\r\n                        return <GifGrid\r\n                                 key={category}\r\n                                 category={category} \r\n                               />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport {\r\n    GiftExpertApp\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GiftExpertApp } from './GifExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render( <GiftExpertApp/>, document.getElementById('root') );\r\n"],"sourceRoot":""}